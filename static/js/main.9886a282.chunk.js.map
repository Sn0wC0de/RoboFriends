{"version":3,"sources":["components/Card.js","components/CardList.js","components/searchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","index.js"],"names":["Card","name","email","id","className","src","alt","CardList","robots","cardComponent","map","user","i","searchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","hasEroor","Component","App","onSearchChange","event","searchfield","target","value","fetch","then","response","json","users","filteredRobots","filter","toLowerCase","includes","length","ReactDOM","render","document","getElementById"],"mappings":"kOAeeA,EAbF,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,MAAOC,EAAM,EAANA,GACzB,OACI,sBAAKC,UAAU,mDAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAA1B,WAAuCG,IAAI,UACnD,gCACI,6BAAKL,IACL,4BAAIC,WCYLK,EAjBE,SAAC,GAAa,IAAZC,EAAW,EAAXA,OACTC,EAAgBD,EAAOE,KAAI,SAACC,EAAMC,GACpC,OACI,cAAC,EAAD,CAEIT,GAAIK,EAAOI,GAAGT,GACdF,KAAMO,EAAOI,GAAGX,KAChBC,MAAQM,EAAOI,GAAGV,OAHbU,MAMjB,OACI,8BACKH,KCCEI,EAdG,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,aAChB,OACI,qBAAKV,UAAU,MAAf,SACI,uBACIW,KAAK,SACLC,YAAY,gBACZZ,UAAW,iCACXa,SAAUH,OCCXI,EARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAO,kBAAmBC,OAAQ,QAApE,SACKJ,EAAMK,YCmBJC,E,kDArBX,WAAYN,GAAQ,IAAD,8BACf,cAAMA,IACDO,MAAQ,CACTC,UAAU,GAHC,E,qDAOnB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAACC,UAAS,M,oBAG5B,WACI,OAAIF,KAAKJ,MAAMM,SACH,yDAELF,KAAKX,MAAMK,a,GAhBCS,aCqDZC,G,wDA7CX,aAAe,IAAD,8BACV,gBAYJC,eAAiB,SAACC,GACd,EAAKL,SAAS,CAACM,YAAaD,EAAME,OAAOC,SAZzC,EAAKb,MAAQ,CACTlB,OAAQ,GACR6B,YAAa,IAJP,E,qDAQd,WAAqB,IAAD,OAChBG,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAG,GAAU,EAAKb,SAAS,CAACvB,OAAQoC,S,oBAQ/C,WACI,MAA8Bd,KAAKJ,MAA5BlB,EAAP,EAAOA,OAAQ6B,EAAf,EAAeA,YACTQ,EAAiBrC,EAAOsC,QAAO,SAAAtC,GACjC,OAAOA,EAAOP,KAAK8C,cAAcC,SAASX,EAAYU,kBAEtD,OAAQvC,EAAOyC,OAQX,sBAAK7C,UAAY,KAAjB,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAcgB,KAAKK,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAU3B,OAAUqC,WAZhC,qBAAKzC,UAAY,kBAAjB,SACI,qBAAKA,UAAU,0BAAf,SACI,oBAAIA,UAAU,aAAd,6B,GA5BN6B,c,MCFlBiB,IAASC,OAAO,cAAE,EAAF,IAAUC,SAASC,eAAe,W","file":"static/js/main.9886a282.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({ name, email, id})=>{\r\n    return (\r\n        <div className=\"bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n            <img src={`https://robohash.org/${id}200x200`} alt=\"robot\" />\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots})=> {\r\n    const cardComponent = robots.map((user, i) => {\r\n        return (\r\n            <Card \r\n                key={i} \r\n                id={robots[i].id} \r\n                name={robots[i].name}  \r\n                email= {robots[i].email}/>\r\n        );\r\n    })\r\n    return (\r\n        <div>\r\n            {cardComponent}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from \"react\";\r\n\r\nconst searchBox = ({searchChange})=> {\r\n    return(\r\n        <div className=\"pa2\">\r\n            <input \r\n                type=\"search\" \r\n                placeholder=\"search robots\"\r\n                className =\"pa3 b--green bg-lightest-blue \"\r\n                onChange={searchChange}\r\n            />\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default searchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{overflowY: 'scroll', border:'1px solid black', height: '80vh'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Scroll\r\n","import React, {Component} from 'react'\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false,\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        this.setState({hasEroor:true})\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasEroor) {\r\n            return  <h1>OOPss . thats not good </h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default ErrorBoundry;","import React, { Component} from 'react';\r\nimport CardList from '../components/CardList.js';\r\n// import { robots } from './robots';\r\nimport SearchBox from '../components/searchBox.js';\r\nimport Scroll from '../components/Scroll.js';\r\nimport ErrorBoundry from '../components/ErrorBoundry.js';\r\nimport './App.css';\r\n\r\n \r\nclass App extends Component  {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response=>response.json())\r\n            .then(users => {this.setState({robots: users})})\r\n    }\r\n    onSearchChange = (event) => {\r\n        this.setState({searchfield: event.target.value});\r\n        \r\n    }\r\n\r\n\r\n    render() {\r\n        const {robots, searchfield} = this.state;\r\n        const filteredRobots = robots.filter(robots => {\r\n            return robots.name.toLowerCase().includes(searchfield.toLowerCase())\r\n        })\r\n            return !robots.length ? (\r\n                <div className = \"vh-100 dt w-100\">\r\n                    <div className=\"dtc v-mid tc  ph3 ph4-l\">\r\n                        <h1 className=\"f1 tc fw6 \">Loading</h1>\r\n                    </div>\r\n                </div>\r\n                 ) : \r\n                (\r\n                <div className = \"tc\">\r\n                    <h1 className=\"f1\">Robofriends</h1>\r\n                    <SearchBox searchChange={this.onSearchChange}/>\r\n                    <Scroll>\r\n                        <ErrorBoundry>\r\n                            <CardList robots = {filteredRobots} />\r\n                        </ErrorBoundry>\r\n                    </Scroll>\r\n                </div>\r\n            );\r\n            \r\n}}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from  './containers/App'\nimport 'tachyons';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(< App />, document.getElementById('root'))\n\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n// reportWebVitals();\n"],"sourceRoot":""}